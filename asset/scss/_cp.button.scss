.btnWrap {
    &.split {
        &.col2 {
            flex-wrap: wrap;
            & > * {
                margin:0;
                @include split(2, .4rem);
                
            }
            .full {display:block; flex:1 0 100%;}
        }
    }

    &.full > #{$btn} {
        width:100%; margin:0; margin-bottom:0 !important;
        & ~ .btn {margin-bottom:0 !important; margin-top:1rem;}
    }

    &.grow {
        @include flex;
        flex-wrap: wrap;
        & > * {flex:1 0 0; display:block;}

        & > .full {flex:none;}

        &.full > #{$btn} {
            margin:0;
            & ~ .btn {margin:0;}
            &:first-child {border-radius:0.3rem 0 0 0.3rem;}
            & + & {border-radius: 0;}
            &:last-child {border-radius:0 0.3rem 0.3rem 0;}

            &:focus {z-index:-1;} // shadow 효과가 있을때만 적용
        }
    }
}
#{$btn} { 
    padding:.5rem 1rem;
    @include align(valign, middle);

    & ~ .btn {margin-left:.5rem;}
    // SIZE
    &-size {
        &.xs {@include btnSize(xs, .3, .7);}
        &.s {@include btnSize(s, .5, 1);}
        &.md {@include btnSize(md, 1, 1);}
        &.lg {@include btnSize(lg, 1.2, 1.5);}
        &.xl {@include btnSize(xl, 1.5, 2.5);}
    }

    // SHAPE
    &.bg {
        @include btn("bg");
        &.type2 {
            background:$color-violet;  border-color:$color-violet;
            color:$color-white;
            &:not(.disabled):not([disabled]):not([aria-disabled="disabled"]):hover {
                color:$color-white;
                background:$color-violet2; border-color:$color-violet2;
            }
            &:not(.disabled):not([disabled]):not([aria-disabled="disabled"]):focus, &.is-active {
                color:$color-white;
                background:$color-violet2; border-color:$color-violet2;
            }
            &[aria-disabled="disabled"], &.disabled {
                color:$color-white;
                &:hover, &:focus {
                    background:$color-violet2; color:$color-white;  border-color:$color-violet2;
                }
            }
        }
        &.type3 {
            background:$color-blue;  border-color:$color-blue;
            color:$color-white;
            &:not(.disabled):not([disabled]):not([aria-disabled="disabled"]):hover {
                color:$color-white;
                background:$color-blue2; border-color:$color-blue2;
            }
            &:not(.disabled):not([disabled]):not([aria-disabled="disabled"]):focus, &.is-active {
                color:$color-white;
                background:$color-blue2; border-color:$color-blue2;
            }
            &[aria-disabled="disabled"], &.disabled {
                color:$color-white;
                &:hover, &:focus {
                    background:$color-blue2; color:$color-white;  border-color:$color-blue2;
                }
            }
        }
    }
    &-line, &.line {
        @include btn("line");
    }

    &.round {
        @include btn("bg");
        padding-left:1.5rem; padding-right:1.5rem; border-radius:10rem;
        &.lg {@include btnSize(lg, 1.2, 2);}
        &.xl {@include btnSize(xl, 1.5, 3);}
    }
    &.shadow {
        @include btn("bg");
        box-shadow: 0 3px 8px rgba(0, 0, 0, .2), 0 2px 3px rgba(0, 0, 0, .05);
        &:not(.disabled):not([disabled]):not([aria-disabled="disabled"]):hover,
        &:not(.disabled):not([disabled]):not([aria-disabled="disabled"]):focus {box-shadow: 0 0 0 0 rgba(0, 0, 0, .3);}
        &[aria-disabled="disabled"], &[disabled], &.disabled {
            box-shadow: 0 3px 8px rgba(0, 0, 0, .2), 0 2px 3px rgba(0, 0, 0, .05);
        }
    }

    &.grow {flex:1 0 0;}

    &.txt {
        & ~ & {margin-top:0;}
        padding:0;
        @include pos-offset(relative);
        @include transition(0.5s, color, ease);
        display:inline-block;
        @include el-content(after){
            @include pos-offset($bottom:-.2rem);
            background:$color-yellow2;
            width:0;
        }

        &:hover {                
            @include line-effect($color-green, after, center) {
                @include transition(0.3s, all, ease);
                height:.7rem;
                width:100%;
                background:$color-green2;
                opacity:.7;
                z-index:-1;
            };
        }


        &.uline {
            padding:0 .2rem 0;

            @include el-content("before"){
                @include pos-offset($bottom:-.2rem, $left:0);
                
                width:100%; height:.1rem;
                background:$color-gray4;
                @include transition(0.5s, all, ease);
            }
            &:hover, &:focus {
                @include line-effect($color-gray1, before, center) {
                    @include transition(0.5s, all, ease);
                    width:0; opacity:0;
                }
            }

            @include el-content("after"){
                width:0; height:.2rem;
            }
            
            &:hover, &:focus {
                @include line-effect($color-gray1, after, center) {
                    @include transition(0.3s, all, ease);
                    background:$color-violet;
                    width:100%; height:.2rem;
                    z-index:1;
                }
            }
            /*
            @include el-content(after){
                margin:0;
                width:100%; height:.1rem;
                background:$color-gray1;
                position:absolute; left:0; bottom:0;
            }
            */
        }
    }

    &.ico {
        
        @include pos-offset(relative);
        &.arrow {
            // ico-arrow
            padding:0 1.5rem 0 .5rem;
            @include el-content(before){
                @include pos-offset($top:50%, $right:5px);
                width:.6rem; height:.6rem; margin-top:calc(-.5rem/2);
                @include line(border, .1rem $color-gray1 solid, left);
                @include line(border, .1rem $color-gray1 solid, bottom);
                transform:rotate(-135deg);                
            }

            &:hover, &:focus {
                @include el-content(before){
                    @include transition(0.3s, all, ease);
                    border-color:$color-orange;
                // border-width:2px;  margin-top:calc(-.6rem/2);
                }                
            }
        }

        // effect underline
        @include el-content("after"){
            @include pos-offset($bottom:-.2rem);
            @include eff-direction(center);
            width:0;
            @include transition(0.5s, all, ease);
        }
        
        &:hover, &:focus {
            @include line-effect($color-gray1, after, center) {
                @include transition(0.5s, all, ease);
                background:$color-orange;
                width:100%; height:.1rem;
            }
        }
    }

    &.full {
        margin:0; margin-bottom:0 !important;
        & ~ .full {margin-top:1rem;}
    }

    &.loading {
        @include pos-offset(relative);
        color:transparent !important;
    
        &>.loadingData {
          @include obj-offset-align($direction: all, $top: 50%, $left: 48%);
          width: auto;
          height: 100%;
    
          &>i {
            display: inline-block;
            opacity: 0;
            @include pos-offset($top: 50%);
            @include el-size(.6rem, .6rem);
            border-radius: 100%;
            background: $color-white;
            animation: btnLoading2 1.4s infinite;
    
            &:first-child {
              left: -1.2rem;
              animation: btnLoading1 1.4s infinite;
            }
    
            &:last-child {
              right: -1.8rem;
              animation: btnLoading3 1.4s infinite;
            }
          }
        }
        $lodingTop1: 27%;
        $lodingTop2: 55%;

        @keyframes btnLoading1 {
            10% {
            top: $lodingTop1;
            opacity: 0;
            }
            40% {
            top: $lodingTop2;
            opacity: 1;
            }
            100% {
            top: $lodingTop1;
            opacity: 0;
            }
        }
        
        @keyframes btnLoading2 {
            30% {
            top: $lodingTop1;
            opacity: 0;
            }
        
            60% {
            top: $lodingTop2;
            opacity: 1;
            }
        
            100% {
            top: $lodingTop1;
            opacity: 0;
            }
        }
        
        @keyframes btnLoading3 {
            40% {
            top: $lodingTop1;
            opacity: 0;
            }
        
            80% {
            top: $lodingTop2;
            opacity: 1;
            }
        
            100% {
            top: $lodingTop1;
            opacity: 0;
            }
        }
    }
    
      
}

